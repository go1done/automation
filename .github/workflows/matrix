name: Run Pipelines with Approval (Single Job)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - Dev
          - Production
      pipelines:
        description: "Comma-separated list of pipelines (or 'all')"
        required: true
        default: "all"
      arg1:
        type: boolean
        default: false
      arg2:
        type: boolean
        default: false
      arg3:
        type: boolean
        default: false
      arg4:
        type: boolean
        default: false
      arg5:
        type: boolean
        default: false

jobs:
  run-all-pipelines:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set AWS Account ID
        id: set-account
        run: |
          if [ "${{ github.event.inputs.environment }}" = "Production" ]; then
            echo "account=222222222222" >> $GITHUB_OUTPUT
          else
            echo "account=111111111111" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::${{ steps.set-account.outputs.account }}:role/GitHubActionsRole

      - name: Collect pipelines
        id: collect
        run: |
          if [ "${{ github.event.inputs.pipelines }}" = "all" ]; then
            aws codepipeline list-pipelines \
              --query 'pipelines[?contains(name, `-customization-pipeline`)].name' \
              --output json > pipelines.json
          else
            echo "${{ github.event.inputs.pipelines }}" | tr ',' '\n' | jq -R . | jq -s . > pipelines.json
          fi
          echo "Collected pipelines:"
          cat pipelines.json
          echo "pipelines=$(cat pipelines.json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Start pipelines sequentially and summarize
        run: |
          echo "## 🚦 Pipeline Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Pipeline | Execution ID | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------------|--------|" >> $GITHUB_STEP_SUMMARY

          PIPELINES=$(cat pipelines.json | jq -r '.[]')

          for pipeline in $PIPELINES; do
            echo "⏳ Starting pipeline: $pipeline"
            exec_id=$(aws codepipeline start-pipeline-execution \
              --name "$pipeline" \
              --pipeline-parameters \
                name=arg1,value=${{ github.event.inputs.arg1 }} \
                name=arg2,value=${{ github.event.inputs.arg2 }} \
                name=arg3,value=${{ github.event.inputs.arg3 }} \
                name=arg4,value=${{ github.event.inputs.arg4 }} \
                name=arg5,value=${{ github.event.inputs.arg5 }} \
              --query 'pipelineExecutionId' --output text)

            if [ -z "$exec_id" ]; then
              status="❌ Failed to start"
            else
              status="✅ Started"
            fi

            echo "- Pipeline: $pipeline"
            echo "  Execution ID: $exec_id"
            echo "  Status: $status"
            echo "| $pipeline | $exec_id | $status |" >> $GITHUB_STEP_SUMMARY
          done
