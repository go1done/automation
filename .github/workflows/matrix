name: Run Pipelines with Approval (Region-aware)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - Dev
          - Production
      region:
        description: "AWS region where pipelines reside"
        required: true
        default: "ap-southeast-2"
      pipelines:
        description: "Comma-separated list of pipelines (or 'all')"
        required: true
        default: "all"
      arg1:
        type: boolean
        default: false
      arg2:
        type: boolean
        default: false
      arg3:
        type: boolean
        default: false
      arg4:
        type: boolean
        default: false
      arg5:
        type: boolean
        default: false
      max_parallel:
        description: "Maximum pipelines to run in parallel"
        required: false
        default: 2
        type: number

jobs:
  collect:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      pipelines: ${{ steps.collect.outputs.pipelines }}
      account: ${{ steps.set-account.outputs.account }}
    steps:
      - uses: actions/checkout@v4

      - name: Set AWS Account ID
        id: set-account
        run: |
          if [ "${{ github.event.inputs.environment }}" = "Production" ]; then
            echo "account=222222222222" >> $GITHUB_OUTPUT
          else
            echo "account=111111111111" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ github.event.inputs.region }}
          role-to-assume: arn:aws:iam::${{ steps.set-account.outputs.account }}:role/GitHubActionsRole

      - name: Collect pipelines
        id: collect
        run: |
          REGION=${{ github.event.inputs.region }}
          if [ "${{ github.event.inputs.pipelines }}" = "all" ]; then
            aws codepipeline list-pipelines \
              --region "$REGION" \
              --query 'pipelines[?contains(name, `-customization-pipeline`)].name' \
              --output json > pipelines.json
          else
            echo "${{ github.event.inputs.pipelines }}" | tr ',' '\n' | jq -R . | jq -s . > pipelines.json
          fi
          echo "Collected pipelines:"
          cat pipelines.json
          echo "pipelines=$(cat pipelines.json | jq -c .)" >> $GITHUB_OUTPUT

  run-pipeline:
    needs: collect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: ${{ github.event.inputs.max_parallel }}
      matrix:
        pipeline: ${{ fromJson(needs.collect.outputs.pipelines) }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ github.event.inputs.region }}
          role-to-assume: arn:aws:iam::${{ needs.collect.outputs.account }}:role/GitHubActionsRole

      - name: Start pipeline
        run: |
          REGION=${{ github.event.inputs.region }}
          echo "⏳ Starting pipeline: ${{ matrix.pipeline }} in region $REGION..."
          exec_id=$(aws codepipeline start-pipeline-execution \
            --name "${{ matrix.pipeline }}" \
            --region "$REGION" \
            --pipeline-parameters \
              name=arg1,value=${{ github.event.inputs.arg1 }} \
              name=arg2,value=${{ github.event.inputs.arg2 }} \
              name=arg3,value=${{ github.event.inputs.arg3 }} \
              name=arg4,value=${{ github.event.inputs.arg4 }} \
              name=arg5,value=${{ github.event.inputs.arg5 }} \
            --query 'pipelineExecutionId' --output text)
          
          if [ -z "$exec_id" ]; then
            status="❌ Failed to start"
          else
            status="✅ Started (exec $exec_id)"
          fi

          echo "$status"
          echo "### ${{ matrix.pipeline }}" >> $GITHUB_STEP_SUMMARY
          echo "- Execution ID: $exec_id" >> $GITHUB_STEP_SUMMARY
          echo "- Status: $status" >> $GITHUB_STEP_SUMMARY
